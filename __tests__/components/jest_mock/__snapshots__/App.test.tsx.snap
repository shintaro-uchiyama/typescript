// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App.tsx all import mock 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": Array [
      Object {
        "instance": <div
          id="stringMulti"
        >
          stringMulti: 
          string from multi
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "stringMulti: ",
            "string from multi",
          ],
          "id": "stringMulti",
        },
        "ref": null,
        "rendered": Array [
          "stringMulti: ",
          "string from multi",
        ],
        "type": "div",
      },
      Object {
        "instance": <div
          id="functionMulti"
        >
          functionMulti: 
          mock multi function
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "functionMulti: ",
            "mock multi function",
          ],
          "id": "functionMulti",
        },
        "ref": null,
        "rendered": Array [
          "functionMulti: ",
          "mock multi function",
        ],
        "type": "div",
      },
      Object {
        "instance": <div
          id="stringDefault"
        >
          stringDefault: 
          mock default string
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "stringDefault: ",
            "mock default string",
          ],
          "id": "stringDefault",
        },
        "ref": null,
        "rendered": Array [
          "stringDefault: ",
          "mock default string",
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <div
            id="stringMulti"
          >
            stringMulti: 
            string from multi
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "stringMulti: ",
              "string from multi",
            ],
            "id": "stringMulti",
          },
          "ref": null,
          "rendered": Array [
            "stringMulti: ",
            "string from multi",
          ],
          "type": "div",
        },
        Object {
          "instance": <div
            id="functionMulti"
          >
            functionMulti: 
            mock multi function
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "functionMulti: ",
              "mock multi function",
            ],
            "id": "functionMulti",
          },
          "ref": null,
          "rendered": Array [
            "functionMulti: ",
            "mock multi function",
          ],
          "type": "div",
        },
        Object {
          "instance": <div
            id="stringDefault"
          >
            stringDefault: 
            mock default string
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "stringDefault: ",
              "mock default string",
            ],
            "id": "stringDefault",
          },
          "ref": null,
          "rendered": Array [
            "stringDefault: ",
            "mock default string",
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
